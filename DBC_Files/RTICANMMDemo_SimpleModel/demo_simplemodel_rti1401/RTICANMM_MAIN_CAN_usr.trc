

-- START@RTICANMM_MAIN_CAN_DS1401_1_1_1



group "CAN" -- subsystem-group
{
     flags: COLLAPSED
}


CANMM_CTL_SETUP_CAN_Controller_1_ID
{
type: UINT(8)
alias: "Variation"
flags: OUTPUT|READONLY
desc: "current Variation of CAN_Controller_1"
unit: ""
value: 0
}




CANMMCAN_NL
{
type: UINT(32)
alias: "NumLostMsgs"
flags: OUTPUT|READONLY
desc: "Number of lost messages"
unit: ""
value: 0
}




CANMMCAN_TRAFFIC
{
type: UINT(8)
alias: "Traffic"
flags: OUTPUT|READONLY
desc: "Traffic"
unit: ""
value: 0
}




CANMMCAN_GEIN
{
type: UINT(8)
alias: "GlobalEnable"
flags: PARAM
desc: "Enable CAN"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXGEIN
{
type: UINT(8)
alias: "GlobalEnableTX"
flags: PARAM
desc: "Enable TX of CAN"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_RTVE
{
type: UINT(8)
alias: "GlobalEnableTXexRT"
flags: PARAM
desc: "Enable all TX messages excluded the RealTimeExperiment variables"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_MAXMSGPERSTEP
{
type: INT(32)
alias: "MaxMessagesPerStep"
flags: PARAM
desc: "MaxMessagesPerStep"
unit: ""
range: <0; 100>
value: 0
}




CANMMCAN_TXEEIE[0]
{
type: UINT(8)
alias: "ECU_Enable"
flags: PARAM
desc: "Enable ECU"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXEEIE[1]
{
type: UINT(8)
alias: "Simulator_Enable"
flags: PARAM
desc: "Enable Simulator"
unit: ""
range: <0; 1>
value: 1
}





group "ECU" -- subsystem-group
{
     flags: COLLAPSED
}



group "modesignals" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_RX_Msg_1_Sgn_1
{
type: UINT(8)
alias: "Modes"
flags: OUTPUT|READONLY
desc: "Network management mode"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_2
{
type: UINT(8)
alias: "test_1"
flags: OUTPUT|READONLY
desc: "test 1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_3
{
type: UINT(8)
alias: "test_2"
flags: OUTPUT|READONLY
desc: "test 2"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_4
{
type: UINT(8)
alias: "test_3"
flags: OUTPUT|READONLY
desc: "test 3"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_5
{
type: UINT(8)
alias: "test_4"
flags: OUTPUT|READONLY
desc: "test 4"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_6
{
type: UINT(8)
alias: "modemanager"
flags: OUTPUT|READONLY
desc: "modemanager"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_7
{
type: UINT(8)
alias: "isactivemode2_1"
flags: OUTPUT|READONLY
desc: "isactive mode 2_1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_8
{
type: UINT(8)
alias: "isactivemode15_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_9
{
type: UINT(8)
alias: "isactivemode15_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_10
{
type: UINT(8)
alias: "isactivemode2_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_11
{
type: UINT(8)
alias: "test_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_MIDRX[7]
{
type: UINT(32)
alias: "modesignals_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 504446976
}




CANMMCAN_MIDFRX[7]
{
type: UINT(8)
alias: "modesignals_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 1
}




CANMMCAN_RXLEN[7]
{
type: UINT(8)
alias: "modesignals_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[7]
{
type: UINT(8)
alias: "modesignals_status"
flags: OUTPUT|READONLY
desc: "modesignals Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[7]
{
type: flt(64,IEEE)
alias: "modesignals_dt"
flags: OUTPUT|READONLY
desc: "modesignals DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_RXt[7]
{
type: flt(64,IEEE)
alias: "modesignals_time"
flags: OUTPUT|READONLY
desc: "modesignals Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_WBS[7]
{
type: UINT(8)
alias: "modesignals_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled modesignals"
unit: ""
value: 0
}




CANMMCAN_TXsta[7]
{
type: UINT(8)
alias: "modesignals_status"
flags: OUTPUT|READONLY
desc: "modesignals Status"
unit: ""
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_1_constant
{
type: UINT(8)
alias: "Modes"
flags: PARAM
desc: "Network management mode"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_2_constant
{
type: UINT(8)
alias: "test_1"
flags: PARAM
desc: "test 1"
unit: ""
range: <0; 63>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_3_constant
{
type: UINT(8)
alias: "test_2"
flags: PARAM
desc: "test 2"
unit: ""
range: <0; 63>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_4_constant
{
type: UINT(8)
alias: "test_3"
flags: PARAM
desc: "test 3"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_5_constant
{
type: UINT(8)
alias: "test_4"
flags: PARAM
desc: "test 4"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_6_constant
{
type: UINT(8)
alias: "modemanager"
flags: PARAM
desc: "modemanager"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_7_constant
{
type: UINT(8)
alias: "isactivemode2_1"
flags: PARAM
desc: "isactive mode 2_1"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_8_constant
{
type: UINT(8)
alias: "isactivemode15_1"
flags: PARAM
desc: ""
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_9_constant
{
type: UINT(8)
alias: "isactivemode15_2"
flags: PARAM
desc: ""
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_10_constant
{
type: UINT(8)
alias: "isactivemode2_2"
flags: PARAM
desc: ""
unit: ""
range: <0; 254>
value: 0
}




CANMMCAN_TX_Msg_1_Sgn_11_constant
{
type: UINT(8)
alias: "test_5"
flags: PARAM
desc: ""
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TXEIN[7]
{
type: UINT(8)
alias: "modesignals_Enable"
flags: PARAM
desc: "Enable modesignals"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXCIE[7]
{
type: UINT(8)
alias: "modesignals_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for modesignals"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXKIEX[7]
{
type: UINT(8)
alias: "modesignals_Kickout"
flags: PARAM
desc: "Kickout modesignals"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXCT[7]
{
type: flt(64,IEEE)
alias: "modesignals_CycleTime"
flags: PARAM
desc: "CycleTime modesignals"
unit: "s"
range: <0; 1000>
value: 5.000000e-02
}




CANMMCAN_TXDT[7]
{
type: flt(64,IEEE)
alias: "modesignals_DelayTime"
flags: PARAM
desc: "DelayTime modesignals"
unit: "s"
range: <0; 1000>
value: 2.000000e-02
}





endgroup -- block-group "TX"



endgroup -- block-group "modesignals"



group "standard" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_RX_Msg_2_Sgn_1
{
type: UINT(8)
alias: "SignalWithError"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 4
}




CANMMCAN_RX_Msg_2_Sgn_2
{
type: UINT(8)
alias: "Bit_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_3
{
type: UINT(8)
alias: "Bit_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_4
{
type: UINT(8)
alias: "Bit_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_5
{
type: UINT(8)
alias: "Bit_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_6
{
type: flt(64,IEEE)
alias: "Signed"
flags: OUTPUT|READONLY
desc: ""
unit: "Degrees"
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_7
{
type: INT(16)
alias: "Temperature"
flags: OUTPUT|READONLY
desc: ""
unit: "Degrees Celsius"
value: -30
}




CANMMCAN_RX_Msg_2_Sgn_8
{
type: flt(64,IEEE)
alias: "SignalFactor"
flags: OUTPUT|READONLY
desc: ""
unit: "V"
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_9
{
type: UINT(8)
alias: "SignalOffset"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 215
}




CANMMCAN_RX_Msg_2_Sgn_10
{
type: UINT(8)
alias: "CRC"
flags: OUTPUT|READONLY
desc: "CRC-checksum byte 1 to 7"
unit: ""
value: 0
}




CANMMCAN_MIDRX[6]
{
type: UINT(32)
alias: "standard_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 115
}




CANMMCAN_MIDFRX[6]
{
type: UINT(8)
alias: "standard_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 0
}




CANMMCAN_RXLEN[6]
{
type: UINT(8)
alias: "standard_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[6]
{
type: UINT(8)
alias: "standard_status"
flags: OUTPUT|READONLY
desc: "standard Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[6]
{
type: flt(64,IEEE)
alias: "standard_dt"
flags: OUTPUT|READONLY
desc: "standard DeltaTime"
unit: "s"
value: 0.1
}




CANMMCAN_RXt[6]
{
type: flt(64,IEEE)
alias: "standard_time"
flags: OUTPUT|READONLY
desc: "standard Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_WBS[6]
{
type: UINT(8)
alias: "standard_CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled standard"
unit: ""
value: 0
}




CANMMCAN_TXsta[6]
{
type: UINT(8)
alias: "standard_status"
flags: OUTPUT|READONLY
desc: "standard Status"
unit: ""
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_1_constant
{
type: UINT(8)
alias: "SignalWithError"
flags: PARAM
desc: ""
unit: ""
range: <2; 4>
value: 4
}




CANMMCAN_TX_Msg_2_Sgn_2_constant
{
type: UINT(8)
alias: "Bit_4"
flags: PARAM
desc: ""
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_3_constant
{
type: UINT(8)
alias: "Bit_3"
flags: PARAM
desc: ""
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_4_constant
{
type: UINT(8)
alias: "Bit_2"
flags: PARAM
desc: ""
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_5_constant
{
type: UINT(8)
alias: "Bit_1"
flags: PARAM
desc: ""
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_6_constant
{
type: flt(64,IEEE)
alias: "Signed"
flags: PARAM
desc: ""
unit: "Degrees"
range: <-64; 63.5>
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_7_constant
{
type: INT(16)
alias: "Temperature"
flags: PARAM
desc: ""
unit: "Degrees Celsius"
range: <-50; 204>
value: -30
}




CANMMCAN_TX_Msg_2_Sgn_8_constant
{
type: flt(64,IEEE)
alias: "SignalFactor"
flags: PARAM
desc: ""
unit: "V"
range: <0; 25.4>
value: 0
}




CANMMCAN_TX_Msg_2_Sgn_9_constant
{
type: UINT(8)
alias: "SignalOffset"
flags: PARAM
desc: ""
unit: ""
range: <200; 215>
value: 215
}




CANMMCAN_TX_Msg_2_Sgn_10_constant
{
type: UINT(8)
alias: "CRC"
flags: PARAM
desc: "CRC-checksum byte 1 to 7"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TXEIN[6]
{
type: UINT(8)
alias: "standard_Enable"
flags: PARAM
desc: "Enable standard"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXCIE[6]
{
type: UINT(8)
alias: "standard_PeriodicalOn"
flags: PARAM
desc: "Activate cyclic transmission for standard"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXKIEX[6]
{
type: UINT(8)
alias: "standard_Kickout"
flags: PARAM
desc: "Kickout standard"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXCT[6]
{
type: flt(64,IEEE)
alias: "standard_CycleTime"
flags: PARAM
desc: "CycleTime standard"
unit: "s"
range: <0; 1000>
value: 1.000000e-01
}




CANMMCAN_TXDT[6]
{
type: flt(64,IEEE)
alias: "standard_DelayTime"
flags: PARAM
desc: "DelayTime standard"
unit: "s"
range: <0; 1000>
value: 0
}





endgroup -- block-group "TX"



endgroup -- block-group "standard"



endgroup -- block-group "ECU"



group "ECU_2" -- subsystem-group
{
     flags: COLLAPSED
}



group "modesignals" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_RX_Msg_1_Sgn_1
{
type: UINT(8)
alias: "Modes"
flags: OUTPUT|READONLY
desc: "Network management mode"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_2
{
type: UINT(8)
alias: "test_1"
flags: OUTPUT|READONLY
desc: "test 1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_3
{
type: UINT(8)
alias: "test_2"
flags: OUTPUT|READONLY
desc: "test 2"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_4
{
type: UINT(8)
alias: "test_3"
flags: OUTPUT|READONLY
desc: "test 3"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_5
{
type: UINT(8)
alias: "test_4"
flags: OUTPUT|READONLY
desc: "test 4"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_6
{
type: UINT(8)
alias: "modemanager"
flags: OUTPUT|READONLY
desc: "modemanager"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_7
{
type: UINT(8)
alias: "isactivemode2_1"
flags: OUTPUT|READONLY
desc: "isactive mode 2_1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_8
{
type: UINT(8)
alias: "isactivemode15_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_9
{
type: UINT(8)
alias: "isactivemode15_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_10
{
type: UINT(8)
alias: "isactivemode2_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_1_Sgn_11
{
type: UINT(8)
alias: "test_5"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_MIDRX[7]
{
type: UINT(32)
alias: "modesignals_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 504446976
}




CANMMCAN_MIDFRX[7]
{
type: UINT(8)
alias: "modesignals_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 1
}




CANMMCAN_RXLEN[7]
{
type: UINT(8)
alias: "modesignals_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[7]
{
type: UINT(8)
alias: "modesignals_status"
flags: OUTPUT|READONLY
desc: "modesignals Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[7]
{
type: flt(64,IEEE)
alias: "modesignals_dt"
flags: OUTPUT|READONLY
desc: "modesignals DeltaTime"
unit: "s"
value: 0.05
}




CANMMCAN_RXt[7]
{
type: flt(64,IEEE)
alias: "modesignals_time"
flags: OUTPUT|READONLY
desc: "modesignals Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "modesignals"



group "standard" -- subsystem-group
{
     flags: COLLAPSED
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED
}


CANMMCAN_RX_Msg_2_Sgn_1
{
type: UINT(8)
alias: "SignalWithError"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 4
}




CANMMCAN_RX_Msg_2_Sgn_2
{
type: UINT(8)
alias: "Bit_4"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_3
{
type: UINT(8)
alias: "Bit_3"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_4
{
type: UINT(8)
alias: "Bit_2"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_5
{
type: UINT(8)
alias: "Bit_1"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_6
{
type: flt(64,IEEE)
alias: "Signed"
flags: OUTPUT|READONLY
desc: ""
unit: "Degrees"
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_7
{
type: INT(16)
alias: "Temperature"
flags: OUTPUT|READONLY
desc: ""
unit: "Degrees Celsius"
value: -30
}




CANMMCAN_RX_Msg_2_Sgn_8
{
type: flt(64,IEEE)
alias: "SignalFactor"
flags: OUTPUT|READONLY
desc: ""
unit: "V"
value: 0
}




CANMMCAN_RX_Msg_2_Sgn_9
{
type: UINT(8)
alias: "SignalOffset"
flags: OUTPUT|READONLY
desc: ""
unit: ""
value: 215
}




CANMMCAN_RX_Msg_2_Sgn_10
{
type: UINT(8)
alias: "CRC"
flags: OUTPUT|READONLY
desc: "CRC-checksum byte 1 to 7"
unit: ""
value: 0
}




CANMMCAN_MIDRX[6]
{
type: UINT(32)
alias: "standard_ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 115
}




CANMMCAN_MIDFRX[6]
{
type: UINT(8)
alias: "standard_IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 0
}




CANMMCAN_RXLEN[6]
{
type: UINT(8)
alias: "standard_Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[6]
{
type: UINT(8)
alias: "standard_status"
flags: OUTPUT|READONLY
desc: "standard Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[6]
{
type: flt(64,IEEE)
alias: "standard_dt"
flags: OUTPUT|READONLY
desc: "standard DeltaTime"
unit: "s"
value: 0.1
}




CANMMCAN_RXt[6]
{
type: flt(64,IEEE)
alias: "standard_time"
flags: OUTPUT|READONLY
desc: "standard Time"
unit: "s"
value: 0.0
}





endgroup -- block-group "RX"



endgroup -- block-group "standard"



endgroup -- block-group "ECU_2"



group "Simulator" -- subsystem-group
{
     flags: COLLAPSED
}



endgroup -- block-group "Simulator"



group "Vector__XXX" -- subsystem-group
{
     flags: COLLAPSED
}



endgroup -- block-group "Vector__XXX"



group "RT" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_RTTNM
{
type: UINT(8)
alias: "NumRTTMessages"
flags: OUTPUT|READONLY
desc: "Number of RTT MessageStructures"
unit: ""
value: 3
}




CANMMCAN_RTTTX[0]
{
type: UINT(8)
alias: "RTTTXStartAddress"
flags: OUTPUT|READONLY
desc: "TX start address"
unit: ""
value: 0
}




CANMMCAN_RTTRX[0]
{
type: UINT(8)
alias: "RTTRXStartAddress"
flags: OUTPUT|READONLY
desc: "RX start address"
unit: ""
value: 0
}





group "FreeRawMessages" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}



group "RTFreeID1" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_RX_Msg_3_Sgn_1
{
type: UINT(8)
alias: "RAW_Byte_1"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_2
{
type: UINT(8)
alias: "RAW_Byte_2"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 2"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_3
{
type: UINT(8)
alias: "RAW_Byte_3"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 3"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_4
{
type: UINT(8)
alias: "RAW_Byte_4"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 4"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_5
{
type: UINT(8)
alias: "RAW_Byte_5"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 5"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_6
{
type: UINT(8)
alias: "RAW_Byte_6"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 6"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_7
{
type: UINT(8)
alias: "RAW_Byte_7"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 7"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_3_Sgn_8
{
type: UINT(8)
alias: "RAW_Byte_8"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 8"
unit: ""
value: 0
}




CANMMCAN_MIDRX[0]
{
type: UINT(32)
alias: "ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_MIDFRX[0]
{
type: UINT(8)
alias: "IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 0
}




CANMMCAN_RXLEN[0]
{
type: UINT(8)
alias: "Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[0]
{
type: UINT(8)
alias: "RXStatus"
flags: OUTPUT|READONLY
desc: "RTFreeID1 Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[0]
{
type: flt(64,IEEE)
alias: "DeltaTime"
flags: OUTPUT|READONLY
desc: "RTFreeID1 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_RXt[0]
{
type: flt(64,IEEE)
alias: "RXTime"
flags: OUTPUT|READONLY
desc: "RTFreeID1 Time"
unit: "s"
value: 0.0
}




CANMMCAN_RXCNT[0]
{
type: UINT(32)
alias: "RXCounter"
flags: OUTPUT|READONLY
desc: "RTFreeID1 Counter"
unit: ""
value: 0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_WBS[0]
{
type: UINT(8)
alias: "CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled standard"
unit: ""
value: 0
}




CANMMCAN_TXsta[0]
{
type: UINT(8)
alias: "TXStatus"
flags: OUTPUT|READONLY
desc: "RTFreeID1 Status"
unit: ""
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_1_constant
{
type: UINT(8)
alias: "RAW_Byte_1"
flags: PARAM
desc: "Free Raw Message Byte 1"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_2_constant
{
type: UINT(8)
alias: "RAW_Byte_2"
flags: PARAM
desc: "Free Raw Message Byte 2"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_3_constant
{
type: UINT(8)
alias: "RAW_Byte_3"
flags: PARAM
desc: "Free Raw Message Byte 3"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_4_constant
{
type: UINT(8)
alias: "RAW_Byte_4"
flags: PARAM
desc: "Free Raw Message Byte 4"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_5_constant
{
type: UINT(8)
alias: "RAW_Byte_5"
flags: PARAM
desc: "Free Raw Message Byte 5"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_6_constant
{
type: UINT(8)
alias: "RAW_Byte_6"
flags: PARAM
desc: "Free Raw Message Byte 6"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_7_constant
{
type: UINT(8)
alias: "RAW_Byte_7"
flags: PARAM
desc: "Free Raw Message Byte 7"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_3_Sgn_8_constant
{
type: UINT(8)
alias: "RAW_Byte_8"
flags: PARAM
desc: "Free Raw Message Byte 8"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TXAIDX1
{
type: UINT(8)
alias: "APPLIDX"
flags: PARAM
desc: ""
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_MIDTXS[0]
{
type: UINT(32)
alias: "ID"
flags: PARAM
desc: "Message ID"
unit: ""
range: <0; 536870911>
value: 0
}




CANMMCAN_MIDFTXS[0]
{
type: UINT(8)
alias: "IDFormat"
flags: PARAM
desc: "Message ID Format"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXLEN[0]
{
type: UINT(8)
alias: "Length"
flags: PARAM
desc: "Message Length"
unit: ""
range: <0; 8>
value: 8
}




CANMMCAN_TXEIN[0]
{
type: UINT(8)
alias: "Enable"
flags: PARAM
desc: "Enable standard"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXCIE[0]
{
type: UINT(8)
alias: "Cyclic"
flags: PARAM
desc: "Activate cyclic transmission for RTFreeID1"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXKIEX[0]
{
type: UINT(8)
alias: "Kickout"
flags: PARAM
desc: "Kickout RTFreeID1"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXCT[0]
{
type: flt(64,IEEE)
alias: "CycleTime"
flags: PARAM
desc: "CycleTime RTFreeID1"
unit: "s"
range: <0; 1000>
value: 0
}




CANMMCAN_TXDT[0]
{
type: flt(64,IEEE)
alias: "DelayTime"
flags: PARAM
desc: "DelayTime RTFreeID1"
unit: "s"
range: <0; 1000>
value: 0
}





endgroup -- block-group "TX"



endgroup -- block-group "RTFreeID1"



group "RTFreeID2" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_RX_Msg_4_Sgn_1
{
type: UINT(8)
alias: "RAW_Byte_1"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_2
{
type: UINT(8)
alias: "RAW_Byte_2"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 2"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_3
{
type: UINT(8)
alias: "RAW_Byte_3"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 3"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_4
{
type: UINT(8)
alias: "RAW_Byte_4"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 4"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_5
{
type: UINT(8)
alias: "RAW_Byte_5"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 5"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_6
{
type: UINT(8)
alias: "RAW_Byte_6"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 6"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_7
{
type: UINT(8)
alias: "RAW_Byte_7"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 7"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_4_Sgn_8
{
type: UINT(8)
alias: "RAW_Byte_8"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 8"
unit: ""
value: 0
}




CANMMCAN_MIDRX[1]
{
type: UINT(32)
alias: "ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_MIDFRX[1]
{
type: UINT(8)
alias: "IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 0
}




CANMMCAN_RXLEN[1]
{
type: UINT(8)
alias: "Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[1]
{
type: UINT(8)
alias: "RXStatus"
flags: OUTPUT|READONLY
desc: "RTFreeID2 Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[1]
{
type: flt(64,IEEE)
alias: "DeltaTime"
flags: OUTPUT|READONLY
desc: "RTFreeID2 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_RXt[1]
{
type: flt(64,IEEE)
alias: "RXTime"
flags: OUTPUT|READONLY
desc: "RTFreeID2 Time"
unit: "s"
value: 0.0
}




CANMMCAN_RXCNT[1]
{
type: UINT(32)
alias: "RXCounter"
flags: OUTPUT|READONLY
desc: "RTFreeID2 Counter"
unit: ""
value: 0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_WBS[1]
{
type: UINT(8)
alias: "CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled RTFreeID1"
unit: ""
value: 0
}




CANMMCAN_TXsta[1]
{
type: UINT(8)
alias: "TXStatus"
flags: OUTPUT|READONLY
desc: "RTFreeID2 Status"
unit: ""
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_1_constant
{
type: UINT(8)
alias: "RAW_Byte_1"
flags: PARAM
desc: "Free Raw Message Byte 1"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_2_constant
{
type: UINT(8)
alias: "RAW_Byte_2"
flags: PARAM
desc: "Free Raw Message Byte 2"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_3_constant
{
type: UINT(8)
alias: "RAW_Byte_3"
flags: PARAM
desc: "Free Raw Message Byte 3"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_4_constant
{
type: UINT(8)
alias: "RAW_Byte_4"
flags: PARAM
desc: "Free Raw Message Byte 4"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_5_constant
{
type: UINT(8)
alias: "RAW_Byte_5"
flags: PARAM
desc: "Free Raw Message Byte 5"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_6_constant
{
type: UINT(8)
alias: "RAW_Byte_6"
flags: PARAM
desc: "Free Raw Message Byte 6"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_7_constant
{
type: UINT(8)
alias: "RAW_Byte_7"
flags: PARAM
desc: "Free Raw Message Byte 7"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_4_Sgn_8_constant
{
type: UINT(8)
alias: "RAW_Byte_8"
flags: PARAM
desc: "Free Raw Message Byte 8"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TXAIDX2
{
type: UINT(8)
alias: "APPLIDX"
flags: PARAM
desc: ""
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_MIDTXS[1]
{
type: UINT(32)
alias: "ID"
flags: PARAM
desc: "Message ID"
unit: ""
range: <0; 536870911>
value: 0
}




CANMMCAN_MIDFTXS[1]
{
type: UINT(8)
alias: "IDFormat"
flags: PARAM
desc: "Message ID Format"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXLEN[1]
{
type: UINT(8)
alias: "Length"
flags: PARAM
desc: "Message Length"
unit: ""
range: <0; 8>
value: 8
}




CANMMCAN_TXEIN[1]
{
type: UINT(8)
alias: "Enable"
flags: PARAM
desc: "Enable RTFreeID1"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXCIE[1]
{
type: UINT(8)
alias: "Cyclic"
flags: PARAM
desc: "Activate cyclic transmission for RTFreeID2"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXKIEX[1]
{
type: UINT(8)
alias: "Kickout"
flags: PARAM
desc: "Kickout RTFreeID2"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXCT[1]
{
type: flt(64,IEEE)
alias: "CycleTime"
flags: PARAM
desc: "CycleTime RTFreeID2"
unit: "s"
range: <0; 1000>
value: 0
}




CANMMCAN_TXDT[1]
{
type: flt(64,IEEE)
alias: "DelayTime"
flags: PARAM
desc: "DelayTime RTFreeID2"
unit: "s"
range: <0; 1000>
value: 0
}





endgroup -- block-group "TX"



endgroup -- block-group "RTFreeID2"



group "RTFreeID3" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}



group "RX" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_RX_Msg_5_Sgn_1
{
type: UINT(8)
alias: "RAW_Byte_1"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 1"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_2
{
type: UINT(8)
alias: "RAW_Byte_2"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 2"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_3
{
type: UINT(8)
alias: "RAW_Byte_3"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 3"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_4
{
type: UINT(8)
alias: "RAW_Byte_4"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 4"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_5
{
type: UINT(8)
alias: "RAW_Byte_5"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 5"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_6
{
type: UINT(8)
alias: "RAW_Byte_6"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 6"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_7
{
type: UINT(8)
alias: "RAW_Byte_7"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 7"
unit: ""
value: 0
}




CANMMCAN_RX_Msg_5_Sgn_8
{
type: UINT(8)
alias: "RAW_Byte_8"
flags: OUTPUT|READONLY
desc: "Free Raw Message Byte 8"
unit: ""
value: 0
}




CANMMCAN_MIDRX[2]
{
type: UINT(32)
alias: "ID"
flags: OUTPUT|READONLY
desc: "Message ID"
unit: ""
value: 0
}




CANMMCAN_MIDFRX[2]
{
type: UINT(8)
alias: "IDFormat"
flags: OUTPUT|READONLY
desc: "Message ID format"
unit: ""
value: 0
}




CANMMCAN_RXLEN[2]
{
type: UINT(8)
alias: "Length"
flags: OUTPUT|READONLY
desc: "Message Length"
unit: ""
value: 8
}




CANMMCAN_RXsta[2]
{
type: UINT(8)
alias: "RXStatus"
flags: OUTPUT|READONLY
desc: "RTFreeID3 Status"
unit: ""
value: 0
}




CANMMCAN_RXdt[2]
{
type: flt(64,IEEE)
alias: "DeltaTime"
flags: OUTPUT|READONLY
desc: "RTFreeID3 DeltaTime"
unit: "s"
value: 0
}




CANMMCAN_RXt[2]
{
type: flt(64,IEEE)
alias: "RXTime"
flags: OUTPUT|READONLY
desc: "RTFreeID3 Time"
unit: "s"
value: 0.0
}




CANMMCAN_RXCNT[2]
{
type: UINT(32)
alias: "RXCounter"
flags: OUTPUT|READONLY
desc: "RTFreeID3 Counter"
unit: ""
value: 0
}





endgroup -- block-group "RX"



group "TX" -- subsystem-group
{
     flags: COLLAPSED | HIDDEN
}


CANMMCAN_WBS[2]
{
type: UINT(8)
alias: "CheckEnable"
flags: OUTPUT|READONLY
desc: "Check enabled RTFreeID2"
unit: ""
value: 0
}




CANMMCAN_TXsta[2]
{
type: UINT(8)
alias: "TXStatus"
flags: OUTPUT|READONLY
desc: "RTFreeID3 Status"
unit: ""
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_1_constant
{
type: UINT(8)
alias: "RAW_Byte_1"
flags: PARAM
desc: "Free Raw Message Byte 1"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_2_constant
{
type: UINT(8)
alias: "RAW_Byte_2"
flags: PARAM
desc: "Free Raw Message Byte 2"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_3_constant
{
type: UINT(8)
alias: "RAW_Byte_3"
flags: PARAM
desc: "Free Raw Message Byte 3"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_4_constant
{
type: UINT(8)
alias: "RAW_Byte_4"
flags: PARAM
desc: "Free Raw Message Byte 4"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_5_constant
{
type: UINT(8)
alias: "RAW_Byte_5"
flags: PARAM
desc: "Free Raw Message Byte 5"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_6_constant
{
type: UINT(8)
alias: "RAW_Byte_6"
flags: PARAM
desc: "Free Raw Message Byte 6"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_7_constant
{
type: UINT(8)
alias: "RAW_Byte_7"
flags: PARAM
desc: "Free Raw Message Byte 7"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TX_Msg_5_Sgn_8_constant
{
type: UINT(8)
alias: "RAW_Byte_8"
flags: PARAM
desc: "Free Raw Message Byte 8"
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_TXAIDX3
{
type: UINT(8)
alias: "APPLIDX"
flags: PARAM
desc: ""
unit: ""
range: <0; 255>
value: 0
}




CANMMCAN_MIDTXS[2]
{
type: UINT(32)
alias: "ID"
flags: PARAM
desc: "Message ID"
unit: ""
range: <0; 536870911>
value: 0
}




CANMMCAN_MIDFTXS[2]
{
type: UINT(8)
alias: "IDFormat"
flags: PARAM
desc: "Message ID Format"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXLEN[2]
{
type: UINT(8)
alias: "Length"
flags: PARAM
desc: "Message Length"
unit: ""
range: <0; 8>
value: 8
}




CANMMCAN_TXEIN[2]
{
type: UINT(8)
alias: "Enable"
flags: PARAM
desc: "Enable RTFreeID2"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXCIE[2]
{
type: UINT(8)
alias: "Cyclic"
flags: PARAM
desc: "Activate cyclic transmission for RTFreeID3"
unit: ""
range: <0; 1>
value: 1
}




CANMMCAN_TXKIEX[2]
{
type: UINT(8)
alias: "Kickout"
flags: PARAM
desc: "Kickout RTFreeID3"
unit: ""
range: <0; 1>
value: 0
}




CANMMCAN_TXCT[2]
{
type: flt(64,IEEE)
alias: "CycleTime"
flags: PARAM
desc: "CycleTime RTFreeID3"
unit: "s"
range: <0; 1000>
value: 0
}




CANMMCAN_TXDT[2]
{
type: flt(64,IEEE)
alias: "DelayTime"
flags: PARAM
desc: "DelayTime RTFreeID3"
unit: "s"
range: <0; 1000>
value: 0
}





endgroup -- block-group "TX"



endgroup -- block-group "RTFreeID3"



endgroup -- block-group "FreeRawMessages"



endgroup -- block-group "RT"



endgroup -- block-group "CAN"


-- END@RTICANMM_MAIN_CAN_DS1401_1_1_1

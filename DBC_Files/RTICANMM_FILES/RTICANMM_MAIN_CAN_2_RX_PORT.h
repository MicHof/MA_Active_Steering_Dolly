/*****************************************************************************************************************************/
/* RTICANMM_MAIN_CAN_2_RX_PORT */
/*                                                                                                                           */
/*   AUTHOR(S):                                                                                                              */
/*      U. Homann                                                                                                              */
/*      M. Eikermann                                                                                                              */
/*                                                                                                                           */
/*                                                                                                                           */
/*   RTICANMM Date: 13-Mar-2014 10:38:34                                                                                     */
/*   RTICANMM Version: 3.0.735671.4434490741                                                                                     */
/*                                                                                                                           */
/*  (c) Copyright 2015, dSPACE GmbH. All rights reserved.                                                                    */
/*      Brand names or product names are trademarks or registered trademarks of their respective companies or organizations. */
/*                                                                                                                           */
/* ***************************************************************************************************************************/

/* AnalogInputVoltagesMessage1.IAV_AIN1_FrontAngle */ 
ssSetOutputPortDataType(S, 0, SS_DOUBLE); 
ssSetOutputPortWidth(S, 0, 1); 
/* AnalogInputVoltagesMessage1.IAV_AIN2_FrontAngleRed */ 
ssSetOutputPortDataType(S, 1, SS_DOUBLE); 
ssSetOutputPortWidth(S, 1, 1); 
/* AnalogInputVoltagesMessage1.IAV_AIN3_RearAngle */ 
ssSetOutputPortDataType(S, 2, SS_DOUBLE); 
ssSetOutputPortWidth(S, 2, 1); 
/* AnalogInputVoltagesMessage1.IAV_AIN4_RearAngleRed */ 
ssSetOutputPortDataType(S, 3, SS_DOUBLE); 
ssSetOutputPortWidth(S, 3, 1); 
/* AnalogInputVoltagesMessage2.IAV_AIN5_PressureSensorX */ 
ssSetOutputPortDataType(S, 4, SS_DOUBLE); 
ssSetOutputPortWidth(S, 4, 1); 
/* AnalogInputVoltagesMessage2.IAV_AIN6_PressureSensorY */ 
ssSetOutputPortDataType(S, 5, SS_DOUBLE); 
ssSetOutputPortWidth(S, 5, 1); 
/* AnalogInputVoltagesMessage2.IAV_AIN7_RearAngle2 */ 
ssSetOutputPortDataType(S, 6, SS_DOUBLE); 
ssSetOutputPortWidth(S, 6, 1); 
/* AnalogInputVoltagesMessage2.IAV_AIN8_RearAngle2Red */ 
ssSetOutputPortDataType(S, 7, SS_DOUBLE); 
ssSetOutputPortWidth(S, 7, 1); 
/* CurrentMeasurementOutputs1.CMO_Output1 */ 
ssSetOutputPortDataType(S, 8, SS_DOUBLE); 
ssSetOutputPortWidth(S, 8, 1); 
/* CurrentMeasurementOutputs1.CMO_Output2 */ 
ssSetOutputPortDataType(S, 9, SS_DOUBLE); 
ssSetOutputPortWidth(S, 9, 1); 
/* CurrentMeasurementOutputs1.CMO_Output3 */ 
ssSetOutputPortDataType(S, 10, SS_DOUBLE); 
ssSetOutputPortWidth(S, 10, 1); 
/* CurrentMeasurementOutputs1.CMO_Output4 */ 
ssSetOutputPortDataType(S, 11, SS_DOUBLE); 
ssSetOutputPortWidth(S, 11, 1); 
/* CurrentMeasurementOutputs2.CMO_Output5 */ 
ssSetOutputPortDataType(S, 12, SS_DOUBLE); 
ssSetOutputPortWidth(S, 12, 1); 
/* CurrentMeasurementOutputs2.CMO_Output6 */ 
ssSetOutputPortDataType(S, 13, SS_DOUBLE); 
ssSetOutputPortWidth(S, 13, 1); 
/* CurrentMeasurementOutputs2.CMO_Output7 */ 
ssSetOutputPortDataType(S, 14, SS_DOUBLE); 
ssSetOutputPortWidth(S, 14, 1); 
/* CurrentMeasurementOutputs2.CMO_Output8 */ 
ssSetOutputPortDataType(S, 15, SS_DOUBLE); 
ssSetOutputPortWidth(S, 15, 1); 
/* DigitalInput.DIV_DIN1 */ 
ssSetOutputPortDataType(S, 16, SS_UINT8); 
ssSetOutputPortWidth(S, 16, 1); 
/* DigitalInput.DIV_DIN2 */ 
ssSetOutputPortDataType(S, 17, SS_UINT8); 
ssSetOutputPortWidth(S, 17, 1); 
/* DigitalInput.DIV_DIN3 */ 
ssSetOutputPortDataType(S, 18, SS_UINT8); 
ssSetOutputPortWidth(S, 18, 1); 
/* DigitalInput.DIV_DIN4 */ 
ssSetOutputPortDataType(S, 19, SS_UINT8); 
ssSetOutputPortWidth(S, 19, 1); 
/* DigitalInput.DIV_DIN5 */ 
ssSetOutputPortDataType(S, 20, SS_UINT8); 
ssSetOutputPortWidth(S, 20, 1); 
/* DigitalInput.DIV_DIN6 */ 
ssSetOutputPortDataType(S, 21, SS_UINT8); 
ssSetOutputPortWidth(S, 21, 1); 
/* DigitalInput.DIV_DIN7 */ 
ssSetOutputPortDataType(S, 22, SS_UINT8); 
ssSetOutputPortWidth(S, 22, 1); 
/* DigitalInput.DIV_DIN8 */ 
ssSetOutputPortDataType(S, 23, SS_UINT8); 
ssSetOutputPortWidth(S, 23, 1); 
/* DigitalInput.DIV_DIN9 */ 
ssSetOutputPortDataType(S, 24, SS_UINT8); 
ssSetOutputPortWidth(S, 24, 1); 
/* DigitalInput.DIV_DIN10 */ 
ssSetOutputPortDataType(S, 25, SS_UINT8); 
ssSetOutputPortWidth(S, 25, 1); 
/* DigitalInput.DIV_DIN11 */ 
ssSetOutputPortDataType(S, 26, SS_UINT8); 
ssSetOutputPortWidth(S, 26, 1); 
/* EtsDataMessage1.ETSD1_InSpeed1 */ 
ssSetOutputPortDataType(S, 27, SS_UINT8); 
ssSetOutputPortWidth(S, 27, 1); 
/* EtsDataMessage1.ETSD1_InSpeed2 */ 
ssSetOutputPortDataType(S, 28, SS_UINT8); 
ssSetOutputPortWidth(S, 28, 1); 
/* EtsDataMessage1.ETSD1_TargetAngle */ 
ssSetOutputPortDataType(S, 29, SS_DOUBLE); 
ssSetOutputPortWidth(S, 29, 1); 
/* EtsDataMessage1.ETSD1_FrontAngle */ 
ssSetOutputPortDataType(S, 30, SS_DOUBLE); 
ssSetOutputPortWidth(S, 30, 1); 
/* EtsDataMessage1.ETSD1_RearAngle */ 
ssSetOutputPortDataType(S, 31, SS_DOUBLE); 
ssSetOutputPortWidth(S, 31, 1); 
/* EtsDataMessage2.ETSD2_Target2Angle */ 
ssSetOutputPortDataType(S, 32, SS_DOUBLE); 
ssSetOutputPortWidth(S, 32, 1); 
/* EtsDataMessage2.ETSD2_Rear2Angle */ 
ssSetOutputPortDataType(S, 33, SS_DOUBLE); 
ssSetOutputPortWidth(S, 33, 1); 
/* EtsDataMessage2.ETSD2_PxPressure */ 
ssSetOutputPortDataType(S, 34, SS_DOUBLE); 
ssSetOutputPortWidth(S, 34, 1); 
/* EtsDataMessage2.ETSD2_PyPressure */ 
ssSetOutputPortDataType(S, 35, SS_DOUBLE); 
ssSetOutputPortWidth(S, 35, 1); 
/* EtsDataMessage3.ETSD3_AmbientTemp */ 
ssSetOutputPortDataType(S, 36, SS_INT16); 
ssSetOutputPortWidth(S, 36, 1); 
/* EtsDataMessage3.ETSD3_OilTemp */ 
ssSetOutputPortDataType(S, 37, SS_INT16); 
ssSetOutputPortWidth(S, 37, 1); 
/* EtsDataMessage3.ETSD3_SecMicroVersion */ 
ssSetOutputPortDataType(S, 38, SS_UINT8); 
ssSetOutputPortWidth(S, 38, 1); 
/* EtsDataMessage3.ETSD3_NmiNumber */ 
ssSetOutputPortDataType(S, 39, SS_UINT8); 
ssSetOutputPortWidth(S, 39, 1); 
/* EtsDataMessage4.ETSD4_CanSensorAngle */ 
ssSetOutputPortDataType(S, 40, SS_DOUBLE); 
ssSetOutputPortWidth(S, 40, 1); 
/* EtsDataMessage4.ETSD4_CanSensorEtsAngle */ 
ssSetOutputPortDataType(S, 41, SS_DOUBLE); 
ssSetOutputPortWidth(S, 41, 1); 
/* EtsDataMessage4.ETSD4_CanSensorTemp */ 
ssSetOutputPortDataType(S, 42, SS_INT16); 
ssSetOutputPortWidth(S, 42, 1); 
/* EtsDataMessage4.ETSD4_CanSensorAlarm */ 
ssSetOutputPortDataType(S, 43, SS_UINT8); 
ssSetOutputPortWidth(S, 43, 1); 
/* EtsDataMessage5.ETSD5_Py2Cofa */ 
ssSetOutputPortDataType(S, 44, SS_UINT16); 
ssSetOutputPortWidth(S, 44, 1); 
/* EtsDataMessage5.ETSD5_Py2Pressure */ 
ssSetOutputPortDataType(S, 45, SS_DOUBLE); 
ssSetOutputPortWidth(S, 45, 1); 
/* EtsSystemMessage.ETSS_SteeringState */ 
ssSetOutputPortDataType(S, 46, SS_BOOLEAN); 
ssSetOutputPortWidth(S, 46, 1); 
/* EtsSystemMessage.ETSS_AlarmState */ 
ssSetOutputPortDataType(S, 47, SS_BOOLEAN); 
ssSetOutputPortWidth(S, 47, 1); 
/* EtsSystemMessage.ETSS_DiagnosticState */ 
ssSetOutputPortDataType(S, 48, SS_BOOLEAN); 
ssSetOutputPortWidth(S, 48, 1); 
/* EtsSystemMessage.ETSS_CentringState */ 
ssSetOutputPortDataType(S, 49, SS_BOOLEAN); 
ssSetOutputPortWidth(S, 49, 1); 
/* EtsSystemMessage.ETSS_SteerMode */ 
ssSetOutputPortDataType(S, 50, SS_UINT8); 
ssSetOutputPortWidth(S, 50, 1); 
/* EtsSystemMessage.ETSS_AlarmPriority */ 
ssSetOutputPortDataType(S, 51, SS_UINT8); 
ssSetOutputPortWidth(S, 51, 1); 
/* EtsSystemMessage.ETSS_AlarmReaction */ 
ssSetOutputPortDataType(S, 52, SS_UINT8); 
ssSetOutputPortWidth(S, 52, 1); 
/* EtsSystemMessage.ETSS_EtsSimpleStatus */ 
ssSetOutputPortDataType(S, 53, SS_UINT8); 
ssSetOutputPortWidth(S, 53, 1); 
/* EtsSystemMessage.ETSS_SupplyVoltageSimpleState */ 
ssSetOutputPortDataType(S, 54, SS_UINT8); 
ssSetOutputPortWidth(S, 54, 1); 
/* EtsSystemMessage.ETSS_SpeedSignalSimpleStatus */ 
ssSetOutputPortDataType(S, 55, SS_UINT8); 
ssSetOutputPortWidth(S, 55, 1); 
/* EtsSystemMessage.ETSS_KL15State */ 
ssSetOutputPortDataType(S, 56, SS_BOOLEAN); 
ssSetOutputPortWidth(S, 56, 1); 
/* EtsSystemMessage.ETSS_TableNumber */ 
ssSetOutputPortDataType(S, 57, SS_UINT8); 
ssSetOutputPortWidth(S, 57, 1); 
/* OilSupplyAssignmentMessage.OSAM_Press */ 
ssSetOutputPortDataType(S, 58, SS_DOUBLE); 
ssSetOutputPortWidth(S, 58, 1); 
/* OilSupplyAssignmentMessage.OSAM_Flow */ 
ssSetOutputPortDataType(S, 59, SS_UINT8); 
ssSetOutputPortWidth(S, 59, 1); 
/* OilSupplyAssignmentMessage.OSAM_Pump */ 
ssSetOutputPortDataType(S, 60, SS_UINT8); 
ssSetOutputPortWidth(S, 60, 1); 
/* OilSupplyAssignmentMessage.OSAM_Prio */ 
ssSetOutputPortDataType(S, 61, SS_UINT8); 
ssSetOutputPortWidth(S, 61, 1); 
/* OilSupplyRequestMessage.OSRM_Press */ 
ssSetOutputPortDataType(S, 62, SS_DOUBLE); 
ssSetOutputPortWidth(S, 62, 1); 
/* OilSupplyRequestMessage.OSRM_Flow */ 
ssSetOutputPortDataType(S, 63, SS_UINT8); 
ssSetOutputPortWidth(S, 63, 1); 
/* OilSupplyRequestMessage.OSRM_Pump */ 
ssSetOutputPortDataType(S, 64, SS_UINT8); 
ssSetOutputPortWidth(S, 64, 1); 
/* OilSupplyRequestMessage.OSRM_Prio */ 
ssSetOutputPortDataType(S, 65, SS_UINT8); 
ssSetOutputPortWidth(S, 65, 1); 
/* PowersupplyVoltageMessage1.PSV_SupV1_KL15 */ 
ssSetOutputPortDataType(S, 66, SS_DOUBLE); 
ssSetOutputPortWidth(S, 66, 1); 
/* PowersupplyVoltageMessage1.PSV_SupV2_KL30 */ 
ssSetOutputPortDataType(S, 67, SS_DOUBLE); 
ssSetOutputPortWidth(S, 67, 1); 
/* PowersupplyVoltageMessage1.PSV_SupV3_KL1530 */ 
ssSetOutputPortDataType(S, 68, SS_DOUBLE); 
ssSetOutputPortWidth(S, 68, 1); 
/* PowersupplyVoltageMessage1.PSV_SupV4_Internal5V */ 
ssSetOutputPortDataType(S, 69, SS_DOUBLE); 
ssSetOutputPortWidth(S, 69, 1); 
/* PowersupplyVoltageMessage2.PSV_SupV5_Internal6V */ 
ssSetOutputPortDataType(S, 70, SS_DOUBLE); 
ssSetOutputPortWidth(S, 70, 1); 
/* PowersupplyVoltageMessage2.PSV_SupV6_2VRef */ 
ssSetOutputPortDataType(S, 71, SS_DOUBLE); 
ssSetOutputPortWidth(S, 71, 1); 
/* PowersupplyVoltageMessage2.PSV_SupV7_AngleSensor */ 
ssSetOutputPortDataType(S, 72, SS_DOUBLE); 
ssSetOutputPortWidth(S, 72, 1); 
/* PowersupplyVoltageMessage2.PSV_SupV8_PressureSensor */ 
ssSetOutputPortDataType(S, 73, SS_DOUBLE); 
ssSetOutputPortWidth(S, 73, 1); 
/* ResistanceMeasurementOutputs.RMO_Output1 */ 
ssSetOutputPortDataType(S, 74, SS_DOUBLE); 
ssSetOutputPortWidth(S, 74, 1); 
/* ResistanceMeasurementOutputs.RMO_Output2 */ 
ssSetOutputPortDataType(S, 75, SS_DOUBLE); 
ssSetOutputPortWidth(S, 75, 1); 
/* ResistanceMeasurementOutputs.RMO_Output3 */ 
ssSetOutputPortDataType(S, 76, SS_DOUBLE); 
ssSetOutputPortWidth(S, 76, 1); 
/* ResistanceMeasurementOutputs.RMO_Output4 */ 
ssSetOutputPortDataType(S, 77, SS_DOUBLE); 
ssSetOutputPortWidth(S, 77, 1); 
/* ResistanceMeasurementOutputs.RMO_Output5 */ 
ssSetOutputPortDataType(S, 78, SS_DOUBLE); 
ssSetOutputPortWidth(S, 78, 1); 
/* ResistanceMeasurementOutputs.RMO_Output6 */ 
ssSetOutputPortDataType(S, 79, SS_DOUBLE); 
ssSetOutputPortWidth(S, 79, 1); 
/* ResistanceMeasurementOutputs.RMO_Output7 */ 
ssSetOutputPortDataType(S, 80, SS_DOUBLE); 
ssSetOutputPortWidth(S, 80, 1); 
/* ResistanceMeasurementOutputs.RMO_Output8 */ 
ssSetOutputPortDataType(S, 81, SS_DOUBLE); 
ssSetOutputPortWidth(S, 81, 1); 
/* SpeedMessage.SPEED_EtsSpeed */ 
ssSetOutputPortDataType(S, 82, SS_UINT8); 
ssSetOutputPortWidth(S, 82, 1); 
/* SpeedMessage.SPEED_SecondMicroSpeed */ 
ssSetOutputPortDataType(S, 83, SS_UINT8); 
ssSetOutputPortWidth(S, 83, 1); 
/* SpeedMessage.SPEED_MidPointHysteresis */ 
ssSetOutputPortDataType(S, 84, SS_INT8); 
ssSetOutputPortWidth(S, 84, 1); 
/* SpeedMessage.SPEED_SpeedValidIndication */ 
ssSetOutputPortDataType(S, 85, SS_INT8); 
ssSetOutputPortWidth(S, 85, 1); 
/* SpeedMessage.SPEED_LeadSpeed */ 
ssSetOutputPortDataType(S, 86, SS_INT8); 
ssSetOutputPortWidth(S, 86, 1); 
/* StatusHighOutputPins.SHO_Output1 */ 
ssSetOutputPortDataType(S, 87, SS_UINT8); 
ssSetOutputPortWidth(S, 87, 1); 
/* StatusHighOutputPins.SHO_Output2 */ 
ssSetOutputPortDataType(S, 88, SS_UINT8); 
ssSetOutputPortWidth(S, 88, 1); 
/* StatusHighOutputPins.SHO_Output3 */ 
ssSetOutputPortDataType(S, 89, SS_UINT8); 
ssSetOutputPortWidth(S, 89, 1); 
/* StatusHighOutputPins.SHO_Output4 */ 
ssSetOutputPortDataType(S, 90, SS_UINT8); 
ssSetOutputPortWidth(S, 90, 1); 
/* StatusHighOutputPins.SHO_Output5 */ 
ssSetOutputPortDataType(S, 91, SS_UINT8); 
ssSetOutputPortWidth(S, 91, 1); 
/* StatusHighOutputPins.SHO_Output6 */ 
ssSetOutputPortDataType(S, 92, SS_UINT8); 
ssSetOutputPortWidth(S, 92, 1); 
/* StatusHighOutputPins.SHO_Output7 */ 
ssSetOutputPortDataType(S, 93, SS_UINT8); 
ssSetOutputPortWidth(S, 93, 1); 
/* StatusHighOutputPins.SHO_Output8 */ 
ssSetOutputPortDataType(S, 94, SS_UINT8); 
ssSetOutputPortWidth(S, 94, 1); 
/* StatusLowOutputPins.SLO_Output1 */ 
ssSetOutputPortDataType(S, 95, SS_UINT8); 
ssSetOutputPortWidth(S, 95, 1); 
/* StatusLowOutputPins.SLO_Output2 */ 
ssSetOutputPortDataType(S, 96, SS_UINT8); 
ssSetOutputPortWidth(S, 96, 1); 
